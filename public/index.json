[
{
	"uri": "//localhost:1313/",
	"title": "CS50 Week 8",
	"tags": [],
	"description": "",
	"content": "CS50 Week 8 - HTML, CSS, JavaScript Overall Welcome to week 8. On this week, we are going to learn about HTML, CSS, and JavaScript. We will go through these following contents.\nContent Routers HTML Regular Expressions CSS Frameworks JavaScript "
},
{
	"uri": "//localhost:1313/1-routers/",
	"title": "Routers",
	"tags": [],
	"description": "",
	"content": "Routers To route data from one place to another, we need to make routing decisions. That is, someone needs to program how data is transferred from point A to point B.\nYou can imagine how data could take multiple paths from point A and point B, such that when a router is congested, data can flow through another path. Packets of data are transferred from one router to another, from one computer to another.\nTCP/IP TCP/IP are two protocols that allow computers to transfer data between them over the internet.\nIP or internet protocol is a way by which computers can identify one another across the internet. Every computer has a unique address in the world. Addresses are in this form:\n#.#.#.# Numbers range from 0 to 255. IP addresses are 32-bits, meaning that these addresses could accommodate over 4 billion addresses. Newer versions of IP addresse, implementing 128-bits, can accommodate far more computers! In the real world, servers do a lot of work for us. Packets are standardized. The source and destination are held within each packet.\nTCP, or transmission control protocol, is used to distinguish web services from one another. For example, 80 is used to denote HTTP and 443 is used to denote HTTPS. These numbers are port numbers.\nWhen information is sent from one location to another, a source IP address, a destination IP address, and TCP port number are sent.\nThese protocols are also used to fragment large files into multiple parts or packets. For example, a large photo of a cat can be sent in multiple packets. When a packet is lost, TCP/IP can request missing packets again from the origin server. TCP will acknowledge when all the data has been transmitted and received.\nDNS It would be very tedious if you needed to remember an IP address to visit a website.\nDNS, or domain name systems, is a collection of servers on the internet that are used to route website addresses like harvard.edu to a specific IP address.\nDNS simply hold a table or database that links specific, fully qualified domain names to specific IP addresses.\nHTTP HTTP or hypertext transfer protocol is an application-level protocol that developers use to build powerful and useful things through the transferring of data from one place to another.\nWhen you see an address such as https://www.example.com you are actually implicitly visiting that address with a / at the end of it.\nThe path is what exists after that slash. For example, https://www.example.com/folder/file.html visits example.com and browses to the folder folder and then visits the file named file.html.\nThe .com is called a top-level domain that is used to denote the location or type of organization associated with this address.\nhttps in this address is the protocol that is used to connect to that web address. By protocol, we mean that HTTP utilizes GET or POST requests to ask for information from a server.\nFor example, you can launch Google Chrome, right-click, and click inspect. When you open the developer tools and visit Network, selecting Preserve log, you will see Request Headers. You’ll see mentions of GET. This is possible in other browsers as well, using slightly different methods. For example, when issuing a GET request, your computer may send the following to a server:\nGET / HTTP/2\rHost: www.harvard.edu Notice that this requests via HTTP the content served on www.harvard.edu\nGenerally, after making a request a server, you will receive the following in Response Headers:\nHTTP/2 200\rContent-Type: text/html This approach to inspecting these logs may be a bit more complicated than need be. You can analyze the work of HTTP protocols at cs50.dev. For example, type the following in your terminal window:\ncurl -I https://www.harvard.edu/ Notice that the output of this command returns all the header values of the responses of the server.\nVia developer tools in your web browser, you can see all the HTTP requests when browsing to the above website. Further, execute the following command in your terminal window:\ncurl -I https://harvard.edu Notice that you will see a 301 response, providing a hint to a browser of where it can find the correct website.\nSimilarly, execute the following in your terminal window:\ncurl -I http://www.harvard.edu/ Notice that the s in https has been removed. The server response will show that the response is 301, meaning that the website has permanently moved.\nSimilar to 301, a code of 404 means that a specified URL has not been found. There are numerous other response codes, such as:\n200 OK\r301 Moved Permanently\r302 Found\r304 Not Modified\r304 Temporary Redirect\r401 Unauthorized\r403 Forbidden\r404 Not Found\r418 I\u0026#39;m a Teapot\r500 Internal Server Error\r503 Service Unavailable "
},
{
	"uri": "//localhost:1313/2-html/",
	"title": "HTML",
	"tags": [],
	"description": "",
	"content": "HTML or hypertext markup language is made up of tags, each of which may have some attributes that describe it. In your terminal, type code hello.html and write code as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates HTML --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;hello, title\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; hello, body \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the html tag both opens and closes this file. Further, notice the lang attribute, which modifies the behavior of the html tag. Also, notice that there are both head tags and body tags. Indentation is not required but does suggest a hierarchy.\nYou can serve your code by typing http-server. This serve is now available on a very long URL. If you click it, you can visit the website with your own code.\nWhen you visit this URL, notice that the file name hello.html appears at the end of this URL. Further, notice, based upon the URL, that the server is serving via port 8080.\nThe hierarchy of tags can be represented as follows:\nKnowledge of this hierarchy will be useful later as we learn JavaScript. The browser will read your HTML file top to bottom and left to right. Because whitespace and indentation is effectively ignored in HTML, you will need to use \u0026lt;p\u0026gt; paragraph tags to open and close a paragraph. Consider the following:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates paragraphs --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Headings\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt; This is a sample text that demonstrates the use of headings. It includes various elements to showcase formatting and structure. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; This section continues to illustrate the use of headings, providing more details and examples in a structured manner. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Here we delve deeper into the content, highlighting additional information that supports the main topics discussed. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; As we go further, this section emphasizes key points and introduces relevant insights that complement the previous sections. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; This subsection contains important notes and considerations that readers should keep in mind as they explore the topic. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Finally, this section wraps up the discussion, summarizing the essential takeaways and providing final thoughts on the subject. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that paragraphs start with a \u0026lt;p\u0026gt; tag and end with a \u0026lt;/p\u0026gt; tag.\nHTML allows for the representation of headings:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates headings (for chapters, sections, subsections, etc.) --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Headings\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;One\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; This is a sample text that demonstrates the use of headings. It includes various elements to showcase formatting and structure. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt;Two\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; This section continues to illustrate the use of headings, providing more details and examples in a structured manner. \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Three\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt; Here we delve deeper into the content, highlighting additional information that supports the main topics discussed. \u0026lt;/p\u0026gt; \u0026lt;h4\u0026gt;Four\u0026lt;/h4\u0026gt; \u0026lt;p\u0026gt; As we go further, this section emphasizes key points and introduces relevant insights that complement the previous sections. \u0026lt;/p\u0026gt; \u0026lt;h5\u0026gt;Five\u0026lt;/h5\u0026gt; \u0026lt;p\u0026gt; This subsection contains important notes and considerations that readers should keep in mind as they explore the topic. \u0026lt;/p\u0026gt; \u0026lt;h6\u0026gt;Six\u0026lt;/h6\u0026gt; \u0026lt;p\u0026gt; Finally, this section wraps up the discussion, summarizing the essential takeaways and providing final thoughts on the subject. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that \u0026lt;h1\u0026gt;, \u0026lt;h2\u0026gt;, and \u0026lt;h3\u0026gt; denote different levels of headings.\nWe can also create unordered lists within HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates (ordered) lists --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;list\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;foo\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;bar\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;baz\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026lt;ul\u0026gt; tag creates an unordered list containing three items.\nWe can also create ordered lists within HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates (ordered) lists --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;list\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;foo\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;bar\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;baz\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026lt;ol\u0026gt; tag creates an ordered list containing three items.\nWe can also create a table in HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates table --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;table\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;1\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;2\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;3\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;4\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;5\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;6\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;7\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;8\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;9\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;*\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;0\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;#\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Tables also have tags that open and close each element within. Also, notice the syntax for comments in HTML.\nImages can also be utilized within HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates image --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;image\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;img alt=\u0026#34;photo of bridge\u0026#34; src=\u0026#34;bridge.png\u0026#34;\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that src=\u0026quot;bridge.png\u0026quot; indicates the path where the image file can be located.\nVideos can also be included in HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates video --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;video\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;video controls muted\u0026gt; \u0026lt;source src=\u0026#34;video.mp4\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt; \u0026lt;/video\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the type attribute designates that this is a video of type mp4. Further, notice how controls and muted are passed to video.\nYou can also link between various web pages:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates link --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;link\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; Visit \u0026lt;a href=\u0026#34;https://www.harvard.edu\u0026#34;\u0026gt;Harvard\u0026lt;/a\u0026gt;. \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026lt;a\u0026gt; or anchor tag is used to make Harvard a linkable text.\nMeta tags are used to hold information about the data within the HTML file. Consider the following:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates responsive design --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;initial-scale=1, width=device-width\u0026#34;\u0026gt; \u0026lt;title\u0026gt;meta\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; This is placeholder text used in design and publishing to fill in content areas with random Latin-based words. \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice this set of meta attributes makes this page mobile-friendly.\nThere are numerous meta key-value pairs that you can use:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates Open Graph tags --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta property=\u0026#34;og:title\u0026#34; content=\u0026#34;CS50\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:description\u0026#34; content=\u0026#34;Introduction to the intellectual enterprises of computer science and the art of programming.\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:image\u0026#34; content=\u0026#34;cat.jpg\u0026#34;\u0026gt; \u0026lt;title\u0026gt;meta\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; ... \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that these key value pairs relate to the title and description of the web page.\nYou can also create forms reminiscent of Google’s search:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates form --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;search\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;https://www.google.com/search\u0026#34; method=\u0026#34;get\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;q\u0026#34; type=\u0026#34;search\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Google Search\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that a form tag opens and provides the attribute of what action it will take. The input field is included, passing the name q and the type as search.\nWe can make this search better as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates additional form attributes --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;search\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;https://www.google.com/search\u0026#34; method=\u0026#34;get\u0026#34;\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus name=\u0026#34;q\u0026#34; placeholder=\u0026#34;Query\u0026#34; type=\u0026#34;search\u0026#34;\u0026gt; \u0026lt;button\u0026gt;Google Search\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that autocomplete is turned off. autofocus is enabled.\nWe’ve seen just a few of many HTML elements you can add to your site. If you have an idea for something to add to your site that we haven’t seen yet (a button, an audio file, etc.) try Googling “X in HTML” to find the right syntax! Similarly, you can use cs50.ai to help you discover more HTML features!\n"
},
{
	"uri": "//localhost:1313/3-regular-expressions/",
	"title": "Regular Expressions",
	"tags": [],
	"description": "",
	"content": "Regular expressions or regexes are a means by which to ensure that user-provided data fits a specific format.\nWe can impelement our own registration page that utilizes regexes as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates type=\u0026#34;email\u0026#34; --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;register\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus name=\u0026#34;email\u0026#34; placeholder=\u0026#34;Email\u0026#34; type=\u0026#34;email\u0026#34;\u0026gt; \u0026lt;button\u0026gt;Register\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the input tag includes attributes that designate that this is of type email. The browser knows to double-check that input is an email address.\nWhile the browser uses these built-in attributes to check for an email address, we can add a pattern attribute to ensure that only specific data ends up in the email address:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates pattern attribute --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;register\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus name=\u0026#34;email\u0026#34; pattern=\u0026#34;.+@.+\\.edu\u0026#34; placeholder=\u0026#34;Email\u0026#34; type=\u0026#34;email\u0026#34;\u0026gt; \u0026lt;button\u0026gt;Register\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the pattern attribute is handed a regular expression to denote that the email address must include an @ symbol and a .edu.\n"
},
{
	"uri": "//localhost:1313/4-css/",
	"title": "CSS",
	"tags": [],
	"description": "",
	"content": "CSS, or cascading style sheet, is a markup language that allows you to fine-tune the aesthetics of your HTML files. CSS is filled with properties, which include key-value pairs.\nIn your terminal, type code home.html and write code as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates inline CSS with P tags --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;css\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p style=\u0026#34;font-size: large; text-align: center;\u0026#34;\u0026gt; John Harvard \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;font-size: medium; text-align: center;\u0026#34;\u0026gt; Welcome to my home page! \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;font-size: small; text-align: center;\u0026#34;\u0026gt; Copyright \u0026amp;#169; John Harvard \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that some style attributes are provided to the \u0026lt;p\u0026gt; tags. The font-size is set to large, medium, or small. Then text-align is set to center.\nWhile correct, the above is not well-designed. We can remove redundancy by modifying our code as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Removes outer DIV --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;css\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body style=\u0026#34;text-align: center\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;font-size: large\u0026#34;\u0026gt; John Harvard \u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;font-size: medium\u0026#34;\u0026gt; Welcome to my home page! \u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;font-size: small\u0026#34;\u0026gt; Copyright \u0026amp;#169; John Harvard \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that \u0026lt;div\u0026gt; tags are used to divide up this HTML file into specific regions. text-align: center is invoked on the entire body of the HTML. Because everything inside body is a child of body, the center attribute cascades down to those children.\nIt turns out that there are newer semantic tags that are included in HTML. We can modify our code as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Uses semantic tags instead of DIVs --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;css\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body style=\u0026#34;text-align: center\u0026#34;\u0026gt; \u0026lt;header style=\u0026#34;font-size: large\u0026#34;\u0026gt; John Harvard \u0026lt;/header\u0026gt; \u0026lt;main style=\u0026#34;font-size: medium\u0026#34;\u0026gt; Welcome to my home page! \u0026lt;/main\u0026gt; \u0026lt;footer style=\u0026#34;font-size: small\u0026#34;\u0026gt; Copyright \u0026amp;#169; John Harvard \u0026lt;/footer\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the header and footer both have different styles assigned to them.\nThis practice of placing the style and information all in the same location is not good practice. We could move the elements of style to the top of the file as follows:\n\u0026lt;!-- Demonstrates class selectors --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;style\u0026gt; .centered { text-align: center; } .large { font-size: large; } .medium { font-size: medium; } .small { font-size: small; } \u0026lt;/style\u0026gt; \u0026lt;title\u0026gt;css\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;header class=\u0026#34;large\u0026#34;\u0026gt; John Harvard \u0026lt;/header\u0026gt; \u0026lt;main class=\u0026#34;medium\u0026#34;\u0026gt; Welcome to my home page! \u0026lt;/main\u0026gt; \u0026lt;footer class=\u0026#34;small\u0026#34;\u0026gt; Copyright \u0026amp;#169; John Harvard \u0026lt;/footer\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice all the style tags are placed up in the head in the style tag wrapper. Also notice that we’ve assigned classes, called centered, large, medium, and small to our elements, and that we select those classes by placing a dot before the name, as in .centered\nIt turns out that we can move all our style code into a special file called a CSS file. We can create a file called style.css and paste our classes there:\n.centered { text-align: center; } .large { font-size: large; } .medium { font-size: medium; } .small { font-size: small; } Notice that this is verbatim what appeared in our HTML file.\nWe then can tell the browser where to locate the CSS for this HTML file:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates external stylesheets --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;style.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;title\u0026gt;css\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body class=\u0026#34;centered\u0026#34;\u0026gt; \u0026lt;header class=\u0026#34;large\u0026#34;\u0026gt; John Harvard \u0026lt;/header\u0026gt; \u0026lt;main class=\u0026#34;medium\u0026#34;\u0026gt; Welcome to my home page! \u0026lt;/main\u0026gt; \u0026lt;footer class=\u0026#34;small\u0026#34;\u0026gt; Copyright \u0026amp;#169; John Harvard \u0026lt;/footer\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that style.css is linked to this HTML file as a stylesheet, telling the browser where to locate the styles we created.\n"
},
{
	"uri": "//localhost:1313/5-frameworks/",
	"title": "Frameworks",
	"tags": [],
	"description": "",
	"content": "Similar to third-party libraries we can leverage in Python, there are third-party libraries called frameworks that we can utilize with our HTML files.\nBootstrap is one of these frameworks that we can use to beautify our HTML and easily perfect design elements such that our pages are more readable.\nBootstrap can be utilized by adding the following link tag in the head of your html file:\n\u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;title\u0026gt;favorites\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; Consider the following HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates table --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;phonebook\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Number\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Carter\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;+1-617-495-1000\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;David\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;+1-617-495-1000\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;John\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;+1-949-468-2750\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice how when looking at a served version of this page, it’s quite plain.\nNow consider the following HTML that implements the use of Bootstrap:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates table with Bootstrap --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;title\u0026gt;phonebook\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;table class=\u0026#34;table\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;col\u0026#34;\u0026gt;Name\u0026lt;/th\u0026gt; \u0026lt;th scope=\u0026#34;col\u0026#34;\u0026gt;Number\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;Carter\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;+1-617-495-1000\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;David\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;+1-949-468-2750\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice how much prettier this website is now.\nSimilarly, consider to the following expansion of our search page created earlier:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates layout with Bootstrap --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link href=\u0026#34;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; integrity=\u0026#34;sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;title\u0026gt;search\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container-fluid\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;m-3 nav\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link text-dark\u0026#34; href=\u0026#34;https://about.google/\u0026#34;\u0026gt;About\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link text-dark\u0026#34; href=\u0026#34;https://store.google.com/\u0026#34;\u0026gt;Store\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item ms-auto\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link text-dark\u0026#34; href=\u0026#34;https://www.google.com/gmail/\u0026#34;\u0026gt;Gmail\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link text-dark\u0026#34; href=\u0026#34;https://www.google.com/imghp\u0026#34;\u0026gt;Images\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link text-dark\u0026#34; href=\u0026#34;https://www.google.com/intl/en/about/products\u0026#34;\u0026gt; \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; width=\u0026#34;16\u0026#34; height=\u0026#34;16\u0026#34; fill=\u0026#34;currentColor\u0026#34; class=\u0026#34;bi bi-grid-3x3-gap-fill\u0026#34; viewBox=\u0026#34;0 0 16 16\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V2zM1 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zM1 12a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2z\u0026#34;/\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;btn btn-primary\u0026#34; href=\u0026#34;https://accounts.google.com/ServiceLogin\u0026#34; role=\u0026#34;button\u0026#34;\u0026gt;Sign in\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;div class=\u0026#34;text-center\u0026#34;\u0026gt; \u0026lt;!-- https://knowyourmeme.com/memes/happy-cat --\u0026gt; \u0026lt;img alt=\u0026#34;Happy Cat\u0026#34; class=\u0026#34;img-fluid w-25\u0026#34; src=\u0026#34;cat.gif\u0026#34;\u0026gt; \u0026lt;form action=\u0026#34;https://www.google.com/search\u0026#34; class=\u0026#34;mt-4\u0026#34; method=\u0026#34;get\u0026#34;\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus class=\u0026#34;form-control form-control-lg mb-4 mx-auto w-50\u0026#34; name=\u0026#34;q\u0026#34; placeholder=\u0026#34;Query\u0026#34; type=\u0026#34;search\u0026#34;\u0026gt; \u0026lt;button class=\u0026#34;btn btn-light\u0026#34;\u0026gt;Google Search\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;btn btn-light\u0026#34; name=\u0026#34;btnI\u0026#34;\u0026gt;I\u0026#39;m Feeling Lucky\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; This version of the page is exceedingly stylized, thanks to Bootstrap.\n"
},
{
	"uri": "//localhost:1313/6-javascript/",
	"title": "JavaScript",
	"tags": [],
	"description": "",
	"content": "JavaScript is another programming language that allows for interactivity within web pages.\nConsider the following implemntation of hello.html that includes both JavaScript and HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates onsubmit --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script\u0026gt; function greet() { alert(\u0026#39;hello, \u0026#39; + document.querySelector(\u0026#39;#name\u0026#39;).value); } \u0026lt;/script\u0026gt; \u0026lt;title\u0026gt;hello\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form onsubmit=\u0026#34;greet(); return false;\u0026#34;\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus id=\u0026#34;name\u0026#34; placeholder=\u0026#34;Name\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice how this form uses an onsubmit property to trigger a script found at the top of the file. The script uses alert to create an alert pop-up. #name.value goes to the textbox on the page and obtains the value typed by the user.\nGenerally, it’s considered bad design to mix onsubmit and JavaScript. We can advance our code as follows:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates DOMContentLoaded --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script\u0026gt; document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function() { document.querySelector(\u0026#39;form\u0026#39;).addEventListener(\u0026#39;submit\u0026#39;, function(e) { alert(\u0026#39;hello, \u0026#39; + document.querySelector(\u0026#39;#name\u0026#39;).value); e.preventDefault(); }); }); \u0026lt;/script\u0026gt; \u0026lt;title\u0026gt;hello\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus id=\u0026#34;name\u0026#34; placeholder=\u0026#34;Name\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that this version of the code creates an addEventListener to listen to the form submit being triggered. Notice how DOMContentLoaded ensures that the whole page is loaded before executing the JavaScript.\nJavaScript allows you to dynamically read and modify the html document loaded into memory such that the user need not reload to see changes. Consider the following HTML:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- Demonstrates programmatic changes to style --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;background\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;button id=\u0026#34;red\u0026#34;\u0026gt;R\u0026lt;/button\u0026gt; \u0026lt;button id=\u0026#34;green\u0026#34;\u0026gt;G\u0026lt;/button\u0026gt; \u0026lt;button id=\u0026#34;blue\u0026#34;\u0026gt;B\u0026lt;/button\u0026gt; \u0026lt;script\u0026gt; let body = document.querySelector(\u0026#39;body\u0026#39;); document.querySelector(\u0026#39;#red\u0026#39;).addEventListener(\u0026#39;click\u0026#39;, function() { body.style.backgroundColor = \u0026#39;red\u0026#39;; }); document.querySelector(\u0026#39;#green\u0026#39;).addEventListener(\u0026#39;click\u0026#39;, function() { body.style.backgroundColor = \u0026#39;green\u0026#39;; }); document.querySelector(\u0026#39;#blue\u0026#39;).addEventListener(\u0026#39;click\u0026#39;, function() { body.style.backgroundColor = \u0026#39;blue\u0026#39;; }); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that JavaScript listens for when a specific button is clicked. Upon such a click, certain style attributes on the page are changed. body is defined as the body of the page. Then, an event listener waits for the clicking of one of the buttons. Then, the body.style.backgroundColor is changed.\nSimilarly, consider the following:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script\u0026gt; // Toggles visibility of greeting function blink() { let body = document.querySelector(\u0026#39;body\u0026#39;); if (body.style.visibility == \u0026#39;hidden\u0026#39;) { body.style.visibility = \u0026#39;visible\u0026#39;; } else { body.style.visibility = \u0026#39;hidden\u0026#39;; } } // Blink every 500ms window.setInterval(blink, 500); \u0026lt;/script\u0026gt; \u0026lt;title\u0026gt;blink\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; hello, world \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; This example blinks a text at a set interval. Notice that window.setInterval takes in two arguments: A function to be called and a wait period (in milliseconds) between function calls.\nConsider the following:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;autocomplete\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input autocomplete=\u0026#34;off\u0026#34; autofocus placeholder=\u0026#34;Query\u0026#34; type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;script src=\u0026#34;large.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; let input = document.querySelector(\u0026#39;input\u0026#39;); input.addEventListener(\u0026#39;keyup\u0026#39;, function(event) { let html = \u0026#39;\u0026#39;; if (input.value) { for (word of WORDS) { if (word.startsWith(input.value)) { html += `\u0026lt;li\u0026gt;${word}\u0026lt;/li\u0026gt;`; } } } document.querySelector(\u0026#39;ul\u0026#39;).innerHTML = html; }); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; This is a JavaScript implementation of autocomplete. This pulls from a file (not pictured here) called large.js that is a list of words.\nInterestingly, we can also geolocate using JavaScript:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;geolocation\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; navigator.geolocation.getCurrentPosition(function(position) { document.write(position.coords.latitude + \u0026#34;, \u0026#34; + position.coords.longitude); }); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that navigator.geolocation is used to getCurrentPosition. This will not work if your computer or browser does not allow for location tracking.\nThe capabilities of JavaScript are many and can be found in the JavaScript Documentation.\n"
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]